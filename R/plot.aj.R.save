plot.aalenjohn <- function(x,from,to,xlab=expression(paste(Days, " ", italic(t), " ", since, " ", admission)),
                      ylab= eval(substitute(expression(paste("Estimate of ", P[{a}][{b}], "(", italic(s), ",", italic(t), ")")),
                                 list(a=from,b=to,s=x$start))),
                      xlim = c(x$start,max(x$times)), ylim=c(0,1),
                      lab=c(10,10,7),
                      txt=eval(substitute(expression(paste(hat(P)[{a}][{b}], "(",italic( s), ",", italic(t), ")")),
                               list(a=from,b=to,s=x$start))),
                      x.txt=(xlim[2]+xlim[1])/2,y.txt=ylim[2]*0.95) {
## ----------------------------------------------------------------------------
## Title: plot.clos
## ----------------------------------------------------------------------------
## Author: Matthias Wangler, mw@imbi.uni-freiburg.de
## Institute of Med. Biometry and Med. Computer Science
## Stefan-Meier-Strasse 26, D-79104 Freiburg,
## http://www.imbi.uni-freiburg.de
## ----------------------------------------------------------------------------
## Description: plot function for an object of class 'clos'
## ----------------------------------------------------------------------------
## Required Packages: 
## ----------------------------------------------------------------------------
## Usage: plot.ahlenjohn(x, from, to, xlab, ylab, xlim, ylim, lab, txt, x.txt, y.tyt)
##
## x:           an object of the class 'aalenjohn'
## from:        a character string naming the state 'from'
## to:          a character string naming the state 'to'
## xlab:        a title for the x axis
## ylab:        a title for the y axis
## xlim:        the x limits (min,max) of the plot
## ylim:        the y limits (min,max) of the plot
## lab:         A numerical vector of the form 'c(x, y, len)' which modifies
##              the way that axes are annotated.  The values of 'x' and 'y'
##              give the (approximate) number of tickmarks on the x and y
##              axes and 'len' specifies the label size.
## txt:         one or more character strings or expressions specifying a
##              text to be written.
## x.txt,y.txt: the x and y co-ordinates to be used to position the text
## ----------------------------------------------------------------------------
## Value: 
## ----------------------------------------------------------------------------
## Notes: -
## ----------------------------------------------------------------------------
## Example:
##          > data(los.data) ## read file 'los.data.txt' into los.data
##          > my.observ <- los.data
##          > nr.0 <- length(my.observ$from[my.observ$from=="0"])
##          > my.model <- msmodel(c("0","1","2","3"),c(nr.0,0,0,0),cens=TRUE,cens.state.name="cens")
##          > my.tmatrices <- tmatrices(model=my.model,observ=my.observ)
##          > aj <- aalenjohn(my.tmatrices)  
##          > plot(aj)  
## ----------------------------------------------------------------------------
## License: GPL 2
##-----------------------------------------------------------------------------
## History: 09.08.2004, Matthias Wangler
##                      the first version
## ----------------------------------------------------------------------------
  if (!inherits(x, "aalenjohn")) {
    stop("Argument 'x' must be an object of class \"aalenjohn\".")
  }

  if( !is.character(from) ) {
    stop("Argument 'from' must be a character string.")
  }

  if( !is.character(to) ) {
    stop("Argument 'to' must be a character string.")
  }  
    
  state.names <- dimnames(x$matrix)[[1]]

  if( !(from %in% state.names) ) {
    stop("Argument 'from' must be a valid statename.")
  }

  if( !(to %in% state.names) ) {
    stop("Argument 'from' must be a valid statename.")
  }

  states <- 1:length(state.names)
  
  ## save default, for resetting
  def.par <- par(no.readonly = TRUE)
  on.exit(par(def.par))
  
  par(lab=lab)
    
  plot(x=x$times,y=x$matrices[states[state.names==from],states[state.names==to],], type ="s", lty=1, lwd=2, xlim=xlim,ylim=ylim,xlab=xlab,ylab=ylab)
  
  text(x.txt, y.txt, txt,cex=2)      
} 
